'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delAt = exports.setWith = exports.replaceField = exports.setFieldHas = exports.setField = exports.setVal = exports.setKeyVal = exports.setIn = exports.setKey = exports.set = undefined;

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _has2 = require('lodash/fp/has');

var _has3 = _interopRequireDefault(_has2);

var _toPath4 = require('lodash/toPath');

var _toPath5 = _interopRequireDefault(_toPath4);

var _rearg2 = require('lodash/rearg');

var _rearg3 = _interopRequireDefault(_rearg2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _curry2 = require('lodash/curry');

var _curry3 = _interopRequireDefault(_curry2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.setSimple = setSimple;

var _cond = require('./cond');

var _transform = require('./transform');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function setSimple(state, key, value) {
  return _extends({}, state, _defineProperty({}, key, value));
}
var set = exports.set = (0, _curry3.default)(function (state, path, value) {
  var _toPath2 = (0, _toPath5.default)(path),
      _toPath3 = _toArray(_toPath2),
      key = _toPath3[0],
      rest = _toPath3.slice(1);

  if (!rest.length) return setSimple(state, key, value);
  return setSimple(state, key, set((0, _get3.default)(state, key, {}), rest, value));
});
// setKey(path, state, value)
var setKey = exports.setKey = (0, _curry3.default)((0, _rearg3.default)(set, [1, 0, 2]), 3);
var setIn = exports.setIn = setKey;
// setKeyVal(key, value, state)
var setKeyVal = exports.setKeyVal = (0, _curry3.default)((0, _rearg3.default)(set, [2, 0, 1]), 3);
// setVal(value, state, key)
var setVal = exports.setVal = (0, _curry3.default)((0, _rearg3.default)(set, [1, 2, 0]), 3);

var setField = exports.setField = (0, _curry3.default)(function (path, transformer) {
  return function (item) {
    return set(item, path, transformer(item));
  };
});
var setFieldHas = exports.setFieldHas = (0, _curry3.default)(function (path, transformer) {
  return (0, _cond.condId)([(0, _has3.default)(path), setField(path, transformer)]);
});
var replaceField = exports.replaceField = (0, _curry3.default)(function (path, transformer) {
  return (0, _cond.condId)([(0, _has3.default)(path), setField(path, (0, _transform.doProp)(transformer, path))]);
});
var setWith = exports.setWith = (0, _curry3.default)(function (fieldId, withId, transformer) {
  return setField(fieldId, (0, _transform.doProp)(transformer, withId));
});

// Allow accepting single path depth.
var delAt = exports.delAt = _omit3.default;
// curry((path, state) => {
//   const fullPath = toPath(path)
//   const omitKey = fullPath.pop()
//   const nestedValue = isEmpty(fullPath) ?
//   console.log(fullPath)
//   console.log(omitKey)
//   return setKey(fullPath, state, omit(get(state, fullPath), omitKey))
// })