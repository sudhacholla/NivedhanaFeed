'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectPrevious = exports.sortedHistoryItemsDesc = exports.sortedHistoryItems = exports.getLength = exports.selectNextIndex = exports.selectPrevIndex = exports.getLastIndex = exports.getFirstIndex = exports.getKeyIndex = exports.selectActiveIndex = exports.getIndex = exports.selectLastKey = exports.selectLast = exports.selectFirstKey = exports.selectFirst = exports.selectActiveKey = exports.selectActive = exports.getHistoryItem = exports.getLastId = exports.getFirstId = exports.getActiveId = exports.getHistoryItems = undefined;

var _reverse2 = require('lodash/fp/reverse');

var _reverse3 = _interopRequireDefault(_reverse2);

var _orderBy2 = require('lodash/fp/orderBy');

var _orderBy3 = _interopRequireDefault(_orderBy2);

var _getOr2 = require('lodash/fp/getOr');

var _getOr3 = _interopRequireDefault(_getOr2);

var _get2 = require('lodash/fp/get');

var _get3 = _interopRequireDefault(_get2);

var _flow2 = require('lodash/fp/flow');

var _flow3 = _interopRequireDefault(_flow2);

var _find2 = require('lodash/fp/find');

var _find3 = _interopRequireDefault(_find2);

var _add2 = require('lodash/fp/add');

var _add3 = _interopRequireDefault(_add2);

var _partialRight2 = require('lodash/partialRight');

var _partialRight3 = _interopRequireDefault(_partialRight2);

var _partial2 = require('lodash/partial');

var _partial3 = _interopRequireDefault(_partial2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.historyMatch = historyMatch;
exports.browserHistory = browserHistory;
exports.lengthMatch = lengthMatch;
exports.findDifferentPage = findDifferentPage;

var _capeSelect = require('cape-select');

var _reselect = require('reselect');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// NOTE: These all act on history state directly. Redux slice needs to be selected first.

var getHistoryItems = exports.getHistoryItems = (0, _get3.default)('key');
var getActiveId = exports.getActiveId = (0, _get3.default)('activeKey');
var getFirstId = exports.getFirstId = (0, _get3.default)('firstKey');
var getLastId = exports.getLastId = (0, _get3.default)('lastKey');

var getHistoryItem = exports.getHistoryItem = (0, _partial3.default)(_capeSelect.getSelect, getHistoryItems);

var selectActive = exports.selectActive = getHistoryItem(getActiveId);
var selectActiveKey = exports.selectActiveKey = selectActive;
var selectFirst = exports.selectFirst = getHistoryItem(getFirstId);
var selectFirstKey = exports.selectFirstKey = selectFirst;
var selectLast = exports.selectLast = getHistoryItem(getLastId);
var selectLastKey = exports.selectLastKey = selectLast;

var getIndex = exports.getIndex = (0, _partialRight3.default)(_flow3.default, (0, _getOr3.default)(0, 'index'));

var selectActiveIndex = exports.selectActiveIndex = getIndex(selectActive);
var getKeyIndex = exports.getKeyIndex = selectActiveIndex;
var getFirstIndex = exports.getFirstIndex = getIndex(selectFirst);
var getLastIndex = exports.getLastIndex = getIndex(selectLast);

var selectPrevIndex = exports.selectPrevIndex = (0, _flow3.default)(selectActiveIndex, (0, _add3.default)(-1));
var selectNextIndex = exports.selectNextIndex = (0, _flow3.default)(selectActiveIndex, (0, _add3.default)(1));
var getLength = exports.getLength = selectNextIndex;

function historyMatch(reduxHistory, windowHistory) {
  if (!windowHistory || !windowHistory.id) throw new Error('Missing window.history.state');
  var activeKey = selectActiveKey(reduxHistory);
  return activeKey.id === windowHistory.id;
}
function browserHistory(reduxHistory) {
  return _extends({}, selectActiveKey(reduxHistory), {
    length: getLength(reduxHistory)
  });
}
function lengthMatch(reduxHistory, windowHistory) {
  return getLength(reduxHistory) === windowHistory.length;
}
var sortedHistoryItems = exports.sortedHistoryItems = (0, _reselect.createSelector)(getHistoryItems, (0, _orderBy3.default)('index', 'asc'));
var sortedHistoryItemsDesc = exports.sortedHistoryItemsDesc = (0, _flow3.default)(sortedHistoryItems, _reverse3.default);
var selectPrevious = exports.selectPrevious = (0, _capeSelect.getSelect)(sortedHistoryItems, selectPrevIndex);
function findDifferentPage(isDifferentFunc) {
  return (0, _flow3.default)(sortedHistoryItemsDesc, (0, _find3.default)(isDifferentFunc));
}