'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProps = exports.propTypes = undefined;

var _propTypes = require('prop-types');

var _toQueryString = require('./toQueryString');

var _toQueryString2 = _interopRequireDefault(_toQueryString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = exports.propTypes = {
  // The function that generates nodes from the fetch state
  children: _propTypes.func.isRequired,

  // The base URL without any query parameters
  url: _propTypes.string.isRequired,

  // The headers to include
  headers: _propTypes.object,

  // The query parameters to include in GET requests
  params: _propTypes.object,

  // converts an object to a query string for the url
  toQueryString: _propTypes.func.isRequired,

  // takes a fetch response and returns a promise that resolves to the data in the response
  // also deals with handling invalid responses
  toData: _propTypes.func.isRequired
};

var defaultProps = exports.defaultProps = {
  toQueryString: _toQueryString2.default,
  toData: function toData(response) {
    if (response.status === 200) {
      return response.json();
    }

    return Promise.reject(new Error('Received response status ' + response.status + '!'));
  }
};